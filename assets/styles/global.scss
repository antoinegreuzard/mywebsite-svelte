@import "/node_modules/hsluv-sass";

$theme-hue: 253;
$theme-saturation: 25%;

@function theme-color($lightness) {
  @return hsluv($theme-hue, $theme-saturation, $lightness);
}

$job-hue: 12;
$project-hue: 272;
$other-hue: 135;

@mixin light-theme() {
  $category-button-saturation: 74%;
  $category-button-lightness: 46%;

  $marker-saturation: $category-button-saturation - 10;
  $marker-lightness: $category-button-lightness + 10;

  --job: #{hsluv($job-hue, $category-button-saturation, $category-button-lightness)};
  --project: #{hsluv($project-hue, $category-button-saturation, $category-button-lightness)};
  --other: #{hsluv($other-hue, $category-button-saturation, $category-button-lightness)};

  --job-marker: #{hsluv($job-hue, $marker-saturation, $marker-lightness)};
  --project-marker: #{hsluv($project-hue, $marker-saturation, $marker-lightness)};
  --other-marker: #{hsluv($other-hue, $marker-saturation, $marker-lightness)};

  --heading: #{theme-color(20%)};
  --foreground: #{theme-color(30%)};
  --link: #{hsluv($theme-hue, 90%, 40%)};
  --subtitle: #{theme-color(38%)};
  --focus-outline: #{theme-color(60%)};
  --timeline: #{hsluv($theme-hue, 16%, 65%)};
  --border: #{theme-color(85%)};
  --panel-background: #{theme-color(95%)};
  --background: #{theme-color(98%)};
}

@mixin dark-theme() {
  $category-button-saturation: 75%;
  $category-button-lightness: 65%;

  --job: #{hsluv($job-hue, $category-button-saturation, $category-button-lightness)};
  --project: #{hsluv($project-hue, $category-button-saturation, $category-button-lightness)};
  --other: #{hsluv($other-hue, $category-button-saturation, $category-button-lightness)};

  --job-marker: var(--job);
  --project-marker: var(--project);
  --other-marker: var(--other);

  --heading: #{theme-color(95%)};
  --foreground: #{theme-color(87%)};
  --link: #{hsluv($theme-hue, 90%, 77%)};
  --subtitle: #{theme-color(75%)};
  --focus-outline: #{theme-color(35%)};
  --timeline: #{theme-color(35%)};
  --border: #{theme-color(23%)};
  --panel-background: #{theme-color(14%)};
  --background: #{theme-color(8%)};
}

// If prefers-color-scheme unsupported, default to light theme
.app-wrapper {
  @include light-theme();
}

// Unless manually overridden, use system preferred theme
@media (prefers-color-scheme: light) {
  div.app-wrapper {
    @include light-theme();
  }
}
@media (prefers-color-scheme: dark) {
  div.app-wrapper {
    @include dark-theme();
  }
}

// If manually set, use that theme
div.app-wrapper[data-theme="light"] {
  @include light-theme();
}
div.app-wrapper[data-theme="dark"] {
  @include dark-theme();
}

html,
body {
  padding: 0;
  margin: 0;
}

html {
  visibility: visible !important;
  font-size: 15px;
}

body {
  line-height: 1.6;
  overflow-y: scroll;
  max-width: 100vw;
  overflow-x: hidden;
}

div.app-wrapper {
  color: var(--foreground);
  background-color: var(--background);
}

@media (prefers-reduced-motion: reduce) {
  body,
  body * {
    animation-delay: 0ms !important;
    animation-duration: 1ms !important;
    transition-delay: 0ms !important;
    transition-duration: 1ms !important;
  }
}

@media (min-width: 400px) {
  html {
    font-size: 17px;
  }
}

img {
  color: transparent; /* don't show alt text when loading */
}

input[type="button"],
button {
  touch-action: manipulation;
  user-select: none;

  &:not(:disabled) {
    cursor: pointer;
  }
}

a,
input[type="button"],
button {
  &:active {
    opacity: 0.8;
  }
}

@mixin focus-styles() {
  outline: 2px dotted var(--focus-outline) !important;
  outline-offset: 1px !important;
}

:focus {
  @include focus-styles();
}

// disables :focus styles if :focus-visible supported
:focus:not(:focus-visible) {
  outline: none !important;
}

:focus-visible {
  @include focus-styles();
}

article.post-full p,
.intro p {
  margin: 1rem auto !important;
}

p {
  margin: 0;
  padding: 0;
  color: var(--foreground);
}

.do-transition,
p,
a,
h1,
h2,
h3,
h4,
code {
  transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
}

h1,
h2,
h3,
h4 {
  color: var(--heading);
  font-weight: 700 !important;
}

h2 {
  font-size: 1.65rem;
  margin: 2rem 0 1rem;
}

h3 {
  font-size: 1.4rem;
  margin: 1.697rem 0 0.848rem;
}

.content-wrapper {
  max-width: 1100px;
  width: 100%;
  margin: 0 auto;
  padding: 0 5%;
}

@media (min-width: 700px) {
  .content-wrapper {
    padding: 0 7%;
  }
}

code {
  background-color: var(--panel-background) !important;
  border: 1px solid var(--border);
  border-radius: 3px;
  padding: 0 3px;
  display: inline-block;
}

a {
  color: var(--link);
  text-decoration: none;

  &:hover {
    text-decoration: underline !important;
  }
}

picture.fixed-size {
  position: relative;

  * {
    position: absolute;
    top: 0;
    left: 0;
  }
}
